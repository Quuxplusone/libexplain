/*
 * libexplain - Explain errno values returned by libc functions
 * Copyright (C) 2008, 2009, 2011, 2012 Peter Miller
 * Written by Peter Miller <pmiller@opensource.org.au>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * The build tool is delegated.
 */

/*
 * The build_command field of the config file is used to invoke the relevant
 * build command.  The following command tells cook where to find the recipes.
 * The ${s Howto.cook} expands to a path into the baseline during development
 * if the file is not in the change.  Look in aesub(5) for more information
 * about command substitutions.
 */
build_command =
    "cook -book ${s etc/howto.cook} search_path=$search_path "
    "project=$p change=$c version=$v -no-log -action -notouch"
    ;

/*
 * The recipes in the User Guide will all remove their targets before
 * constructing them, which qualifies them to use the following entry in the
 * config file.  The targets MUST be removed first if this field is true,
 * otherwise the baseline would cease to be self-consistent.
 *
 * Fortunately, Cook has a nifty "set unlink;" statement which is
 * placed at the top of the cookbook to do this automatically.
 */
link_integration_directory = true;

symlink_exceptions =
[
    "libexplain/patchlevel.h",
    "etc/version.so",
];

develop_begin_command = "ln -s $baseline bl";

/* -------------------------------------------------------------------------
 *
 * The integrate_begin_exceptions are files which are not hard linked
 * from the baseline to the integration directory.  In this case, this
 * is done to ensure the version stamp is updated appropriately.
 */

integrate_begin_exceptions =
[
    "debian/changelog",
    "etc/version.so",
    "libexplain/patchlevel.o",
    "libexplain/version.o",
];

/* vim: set ts=8 sw=4 et : */
